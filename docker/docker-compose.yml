version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../dicom_data:/data/dicom:ro  # Read-only mount for DICOM data
    depends_on:
      - backend

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend.Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ../dicom_data:/data/dicom:ro  # Read-only mount for DICOM data
    depends_on:
      - mongodb
      - tumor_analysis
      - icp_monitoring
      - model_training
      - medical_documentation
      - imaging_data

  tumor_analysis:
    build:
      context: ../services/tumor_analysis
      dockerfile: ../docker/flask.Dockerfile
    ports:
      - "5005:5005"

  icp_monitoring:
    build:
      context: ../services/icp_monitoring
      dockerfile: ../docker/flask.Dockerfile
    ports:
      - "5006:5006"

  model_training:
    build:
      context: ../services/model_training
      dockerfile: ../docker/flask.Dockerfile
    ports:
      - "5001:5001"

  medical_documentation:
    build:
      context: ../services/medical_documentation
      dockerfile: ../docker/flask.Dockerfile
    ports:
      - "5002:5002"
    volumes:
      - ./models:/app/models

  imaging_data:
    build:
      context: ../services/imaging_data
      dockerfile: ../docker/flask.Dockerfile
    ports:
      - "5003:5003"
    volumes:
      - ../dicom_data:/data/dicom:ro  # Read-only mount for DICOM data
    environment:
      - UPLOAD_DIR=/data/dicom
    depends_on:
      - mongodb

  local_inference:
    build:
      context: ../services/local_inference
      dockerfile: ../docker/local_inference.Dockerfile
    ports:
      - "5004:5004"
    volumes:
      - model_data:/app/data
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  patient_management:
    build:
      context: ../services/patient_management
      dockerfile: ../docker/flask.Dockerfile
    ports:
      - "5008:5008"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PORT=5008
      - MONGO_URL=mongodb://mongodb:27017
    depends_on:
      - mongodb
    volumes:
      - ../services/patient_management:/app

volumes:
  mongodb_data:
  dicom_data:
  model_data: 